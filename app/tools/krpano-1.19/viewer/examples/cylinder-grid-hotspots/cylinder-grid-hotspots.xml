<krpano>
	
	<!--
		This example shows how to place hotspots on a cylinder surface
		by using pixel-sizes as offsets (calc_spherical_offset).
	-->
	
	<preview type="grid" />
	
	<action name="calc_spherical_offset">
		Math.atan2(a, %1, 500);
		calc(%2, a * 180.0 / Math.PI);
	</action>
		
	<action name="yuv_to_rgb_color">
		calc(cr, (%2*1.164 + 1.596*(%4-128)) BOR 0);
		calc(cg, (%2*1.164 - 0.813*(%4-128) - 0.391*(%3-128)) BOR 0);
		calc(cb, (%2*1.164 + 2.018*(%3-128)) BOR 0);
		clamp(cr, 0, 255);
		clamp(cg, 0, 255);
		clamp(cb, 0, 255);
		calc(%1, (cr LSHT 16) BOR (cg LSHT 8) BOR cb);
	</action>
		
	<action name="add_spots" autorun="onstart">
		set(cnt, 10);
		set(w, 50);
		set(h, 50);
		calc_spherical_offset(get(w), wo);
		for(set(y,0), y LT cnt, inc(y),
			for(set(x,0), x LT cnt, inc(x),
				calc(hs_name, 'hs_' + x + '/' + y);
				addhotspot(get(hs_name));
				copy(hs, hotspot[get(hs_name)]);
				set(hs.type, text);
				calc(hs.ath, (x - cnt/2) * wo + wo/2);
				calc(hs.oy, (y - cnt/2) * h + h/2);
				set(hs.distorted,true);
				calc(hs.html, '' + (1 + y*cnt + x));
				set(hs.css, 'text-align:center; color:#FFFFFF; font-weight:bold;');
				set(hs.txtshadow, '0 0 3 0x000000 1');
				copy(hs.width, w);
				copy(hs.height, h);
				set(hs.vcenter, true);
				set(hs.capture, false);
				set(hs.bgroundedge, 11);
				set(hs.oversampling, 2);
				set(hs.mipmapping, true);
				yuv_to_rgb_color(hs.backgroundcolor, calc((((x*2/cnt - 1)^2 + (y*2/cnt - 1)^2) ^ 0.5) / 1.414 * 255), calc(x * 255/cnt), calc(y * 255/cnt));
				set(hs.onover, tween(ry, -360, 0.5, default, set(ry,0)); );
			);
		);
	</action>

</krpano>

